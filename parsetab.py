
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND COMMA COMPARISION ID INTERSECT JOIN LBRACKET LPARENT MINUS NUMBER PROJECT RBRACKET RENAME RPARENT SELECT SEMI STRING TIMES UNIONquery : expr SEMIexpr : proj_expr \n            | rename_expr \n            | union_expr     \n            | minus_expr \n            | intersect_expr \n            | join_expr \n            | times_expr \n            | select_expr expr : IDproj_expr : PROJECT LBRACKET attr_list RBRACKET LPARENT expr RPARENTrename_expr : RENAME LBRACKET attr_list RBRACKET LPARENT expr RPARENTattr_list : IDattr_list : attr_list COMMA IDunion_expr : LPARENT expr UNION expr RPARENTminus_expr : LPARENT expr MINUS expr RPARENTintersect_expr : LPARENT expr INTERSECT expr RPARENTjoin_expr : LPARENT expr JOIN expr RPARENTtimes_expr : LPARENT expr TIMES expr RPARENTselect_expr : SELECT LBRACKET condition RBRACKET LPARENT expr RPARENTcondition : simple_conditioncondition : condition AND simple_conditionsimple_condition : operand COMPARISION operandoperand : IDoperand : STRINGoperand : NUMBER'
    
_lr_action_items = {'ID':([0,13,17,19,20,23,24,25,26,27,36,44,45,46,53,54,],[11,11,22,22,32,11,11,11,11,11,47,32,32,11,11,11,]),'PROJECT':([0,13,23,24,25,26,27,46,53,54,],[12,12,12,12,12,12,12,12,12,12,]),'RENAME':([0,13,23,24,25,26,27,46,53,54,],[14,14,14,14,14,14,14,14,14,14,]),'LPARENT':([0,13,23,24,25,26,27,35,42,43,46,53,54,],[13,13,13,13,13,13,13,46,53,54,13,13,13,]),'SELECT':([0,13,23,24,25,26,27,46,53,54,],[15,15,15,15,15,15,15,15,15,15,]),'$end':([1,16,],[0,-1,]),'SEMI':([2,3,4,5,6,7,8,9,10,11,48,49,50,51,52,60,61,62,],[16,-2,-3,-4,-5,-6,-7,-8,-9,-10,-15,-16,-17,-18,-19,-11,-12,-20,]),'UNION':([3,4,5,6,7,8,9,10,11,18,48,49,50,51,52,60,61,62,],[-2,-3,-4,-5,-6,-7,-8,-9,-10,23,-15,-16,-17,-18,-19,-11,-12,-20,]),'MINUS':([3,4,5,6,7,8,9,10,11,18,48,49,50,51,52,60,61,62,],[-2,-3,-4,-5,-6,-7,-8,-9,-10,24,-15,-16,-17,-18,-19,-11,-12,-20,]),'INTERSECT':([3,4,5,6,7,8,9,10,11,18,48,49,50,51,52,60,61,62,],[-2,-3,-4,-5,-6,-7,-8,-9,-10,25,-15,-16,-17,-18,-19,-11,-12,-20,]),'JOIN':([3,4,5,6,7,8,9,10,11,18,48,49,50,51,52,60,61,62,],[-2,-3,-4,-5,-6,-7,-8,-9,-10,26,-15,-16,-17,-18,-19,-11,-12,-20,]),'TIMES':([3,4,5,6,7,8,9,10,11,18,48,49,50,51,52,60,61,62,],[-2,-3,-4,-5,-6,-7,-8,-9,-10,27,-15,-16,-17,-18,-19,-11,-12,-20,]),'RPARENT':([3,4,5,6,7,8,9,10,11,37,38,39,40,41,48,49,50,51,52,57,58,59,60,61,62,],[-2,-3,-4,-5,-6,-7,-8,-9,-10,48,49,50,51,52,-15,-16,-17,-18,-19,60,61,62,-11,-12,-20,]),'LBRACKET':([12,14,15,],[17,19,20,]),'STRING':([20,44,45,],[33,33,33,]),'NUMBER':([20,44,45,],[34,34,34,]),'RBRACKET':([21,22,28,29,30,32,33,34,47,55,56,],[35,-13,42,43,-21,-24,-25,-26,-14,-22,-23,]),'COMMA':([21,22,28,47,],[36,-13,36,-14,]),'AND':([29,30,32,33,34,55,56,],[44,-21,-24,-25,-26,-22,-23,]),'COMPARISION':([31,32,33,34,],[45,-24,-25,-26,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'query':([0,],[1,]),'expr':([0,13,23,24,25,26,27,46,53,54,],[2,18,37,38,39,40,41,57,58,59,]),'proj_expr':([0,13,23,24,25,26,27,46,53,54,],[3,3,3,3,3,3,3,3,3,3,]),'rename_expr':([0,13,23,24,25,26,27,46,53,54,],[4,4,4,4,4,4,4,4,4,4,]),'union_expr':([0,13,23,24,25,26,27,46,53,54,],[5,5,5,5,5,5,5,5,5,5,]),'minus_expr':([0,13,23,24,25,26,27,46,53,54,],[6,6,6,6,6,6,6,6,6,6,]),'intersect_expr':([0,13,23,24,25,26,27,46,53,54,],[7,7,7,7,7,7,7,7,7,7,]),'join_expr':([0,13,23,24,25,26,27,46,53,54,],[8,8,8,8,8,8,8,8,8,8,]),'times_expr':([0,13,23,24,25,26,27,46,53,54,],[9,9,9,9,9,9,9,9,9,9,]),'select_expr':([0,13,23,24,25,26,27,46,53,54,],[10,10,10,10,10,10,10,10,10,10,]),'attr_list':([17,19,],[21,28,]),'condition':([20,],[29,]),'simple_condition':([20,44,],[30,55,]),'operand':([20,44,45,],[31,31,56,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> query","S'",1,None,None,None),
  ('query -> expr SEMI','query',2,'p_query','RAParser.py',6),
  ('expr -> proj_expr','expr',1,'p_expr','RAParser.py',10),
  ('expr -> rename_expr','expr',1,'p_expr','RAParser.py',11),
  ('expr -> union_expr','expr',1,'p_expr','RAParser.py',12),
  ('expr -> minus_expr','expr',1,'p_expr','RAParser.py',13),
  ('expr -> intersect_expr','expr',1,'p_expr','RAParser.py',14),
  ('expr -> join_expr','expr',1,'p_expr','RAParser.py',15),
  ('expr -> times_expr','expr',1,'p_expr','RAParser.py',16),
  ('expr -> select_expr','expr',1,'p_expr','RAParser.py',17),
  ('expr -> ID','expr',1,'p_ID','RAParser.py',21),
  ('proj_expr -> PROJECT LBRACKET attr_list RBRACKET LPARENT expr RPARENT','proj_expr',7,'p_proj_expr','RAParser.py',28),
  ('rename_expr -> RENAME LBRACKET attr_list RBRACKET LPARENT expr RPARENT','rename_expr',7,'p_rename_expr','RAParser.py',35),
  ('attr_list -> ID','attr_list',1,'p_attr_list','RAParser.py',42),
  ('attr_list -> attr_list COMMA ID','attr_list',3,'p_attr_list_2','RAParser.py',46),
  ('union_expr -> LPARENT expr UNION expr RPARENT','union_expr',5,'p_union_expr','RAParser.py',50),
  ('minus_expr -> LPARENT expr MINUS expr RPARENT','minus_expr',5,'p_minus_expr','RAParser.py',56),
  ('intersect_expr -> LPARENT expr INTERSECT expr RPARENT','intersect_expr',5,'p_intersect_expr','RAParser.py',62),
  ('join_expr -> LPARENT expr JOIN expr RPARENT','join_expr',5,'p_join_expr','RAParser.py',68),
  ('times_expr -> LPARENT expr TIMES expr RPARENT','times_expr',5,'p_times_expr','RAParser.py',74),
  ('select_expr -> SELECT LBRACKET condition RBRACKET LPARENT expr RPARENT','select_expr',7,'p_select_expr','RAParser.py',80),
  ('condition -> simple_condition','condition',1,'p_condition','RAParser.py',87),
  ('condition -> condition AND simple_condition','condition',3,'p_condition_2','RAParser.py',91),
  ('simple_condition -> operand COMPARISION operand','simple_condition',3,'p_simple_condition','RAParser.py',95),
  ('operand -> ID','operand',1,'p_operand_1','RAParser.py',99),
  ('operand -> STRING','operand',1,'p_operand_2','RAParser.py',103),
  ('operand -> NUMBER','operand',1,'p_operand_3','RAParser.py',107),
]
